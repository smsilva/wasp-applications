#!/bin/bash
echo ""
echo "4. Install httpbin (TLS Ingress Enabled)"
echo ""
echo "4.1. Install using Helm Chart"
echo ""

helm repo add argo https://argoproj.github.io/argo-helm &> /dev/null
helm repo update argo &> /dev/null
helm search repo argo

ARGOCD_VERSION="4.2.1"
ARGOCD_HOST="argocd-blue.eastus2.sandbox.wasp.silvios.me"
ARGOCD_NAMESPACE="argocd-infra"
ARGOCD_TLS_SECRET="argocd-tls-staging"
ARGOCD_APP_REGISTRATION_ID="5b59d3e0-04f4-4be4-aff4-b159a8ed4b46"
ARGOCD_HELM_FILE_SERVICE="${HOME}/.helm/argocd/values.yaml"
CERT_MANAGER_CLUSTER_ISSUER="letsencrypt-staging-application-gateway"
INGRESS_CLASS_NAME="azure-application-gateway"

mkdir -p "${HOME}/.helm/argocd/"

echo ""
echo "argocd:"
echo "  version:              ${ARGOCD_VERSION}"
echo "  namespace:            ${ARGOCD_NAMESPACE}"
echo "  host:                 ${ARGOCD_HOST}"
echo "  values:               ${ARGOCD_HELM_FILE_SERVICE}"
echo "  ssoAppRegistrationId: ${ARGOCD_APP_REGISTRATION_ID}"
echo "  clusterIssuer:        ${CERT_MANAGER_CLUSTER_ISSUER}"
echo "  ingressClassName:     ${INGRESS_CLASS_NAME}"
echo ""

cat <<EOF > "${ARGOCD_HELM_FILE_SERVICE?}"
fullnameOverride: "argocd"
server:
  extraArgs:
    - --insecure
  ingress:
    enabled: true
    https: false
    ingressClassName: "${INGRESS_CLASS_NAME?}"
    hosts:
      - ${ARGOCD_HOST?}
    pathType: ImplementationSpecific
    paths:
      - /
      - /argocd
    tls:
      - secretName: ${ARGOCD_TLS_SECRET?}
        hosts:
          - ${ARGOCD_HOST?}
    annotations:
      appgw.ingress.kubernetes.io/backend-protocol: "http"
      cert-manager.io/cluster-issuer: ${CERT_MANAGER_CLUSTER_ISSUER?}
  config:
    url: https://${ARGOCD_HOST?}
    users.anonymous.enabled: "false"
    admin.enabled: "false"
    oidc.config: |
      name: AzureAD
      issuer: https://login.microsoftonline.com/${ARM_TENANT_ID?}/v2.0
      clientID: ${ARGOCD_APP_REGISTRATION_ID?}
      clientSecret: \$oidc.azuread.clientSecret
      requestedIDTokenClaims:
        groups:
          essential: true
      requestedScopes:
        - openid
        - profile
        - email
EOF

helm upgrade \
  --install \
  --namespace ${ARGOCD_NAMESPACE?} \
  --create-namespace \
  argocd argo/argo-cd \
  --version "${ARGOCD_VERSION?}" \
  --values "${ARGOCD_HELM_FILE_SERVICE?}" \
  --values "${SCRIPTS_DIRECTORY}/../argocd-configs-known-hosts.yaml" \
  --values "${SCRIPTS_DIRECTORY}/../argocd-extra-objects.yaml"

echo ""
echo "4.2. Test"
echo ""

cat << EOF
echo | openssl \\
  s_client \\
    -connect ${ARGOCD_HOST?}:443 \\
    -showcerts

kubectl \\
  create secret tls argocd-tls-prod \\
  --cert=argocd-blue.eastus2.sandbox.wasp.silvios.me.pem \\
  --key=argocd-blue.eastus2.sandbox.wasp.silvios.me.key \\
  --namespace argocd-infra

EOF

echo ""
