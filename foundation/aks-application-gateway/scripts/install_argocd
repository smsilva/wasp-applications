#!/bin/bash
echo ""
echo "4. Install httpbin (TLS Ingress Enabled)"
echo ""
echo "4.1. Install using Helm Chart"
echo ""

helm repo add argo https://argoproj.github.io/argo-helm &> /dev/null
helm repo update argo &> /dev/null
helm search repo argo

export ARGOCD_TEMPORARY_DIRECTORY="${HOME}/.helm/argocd"
export ARGOCD_TEMPLATES_DIRECTORY="${SCRIPTS_DIRECTORY}/../templates/argocd"
export ARGOCD_LETS_ENCRYPT_SERVER="prod" # [ staging | prod ]
export ARGOCD_HELM_CHART_VERSION="4.2.2"
export ARGOCD_HOST="argocd-blue.eastus2.sandbox.wasp.silvios.me"
export ARGOCD_NAMESPACE="argocd-infra"
export ARGOCD_GROUP_ADMIN="d5075d0a-3704-4ed9-ad62-dc8068c7d0e1"
export ARGOCD_GROUP_CONTRIBUTOR="2deb9d06-5807-4107-a5a6-94368f39d79f"
export ARGOCD_TLS_SECRET="argocd-tls-${ARGOCD_LETS_ENCRYPT_SERVER?}"
export ARGOCD_APP_REGISTRATION_ID="5b59d3e0-04f4-4be4-aff4-b159a8ed4b46"
export CERT_MANAGER_CLUSTER_ISSUER="letsencrypt-${ARGOCD_LETS_ENCRYPT_SERVER?}-application-gateway"
export INGRESS_CLASS_NAME="azure-application-gateway"

mkdir -p "${ARGOCD_TEMPORARY_DIRECTORY?}"

echo ""
echo "argocd:"
echo "  helmChartversion:     ${ARGOCD_HELM_CHART_VERSION}"
echo "  namespace:            ${ARGOCD_NAMESPACE}"
echo "  host:                 ${ARGOCD_HOST}"
echo "  ssoAppRegistrationId: ${ARGOCD_APP_REGISTRATION_ID}"
echo "  clusterIssuer:        ${CERT_MANAGER_CLUSTER_ISSUER}"
echo "  ingressClassName:     ${INGRESS_CLASS_NAME}"
echo "  tlsSecret:            ${ARGOCD_TLS_SECRET}"
echo "  templatesDirectory:   ${ARGOCD_TEMPLATES_DIRECTORY}"
echo "  workDirectory:        ${ARGOCD_TEMPORARY_DIRECTORY}"
echo ""

# This will be used when we need to put a '$' sign into the final file.
export DOLLAR='$'

while read FILE_NAME; do
  BASE_FILE_NAME="$(basename ${FILE_NAME?})"

  envsubst < "${FILE_NAME?}" > "${ARGOCD_TEMPORARY_DIRECTORY?}/${BASE_FILE_NAME?}"
done <<< "$(find "${ARGOCD_TEMPLATES_DIRECTORY?}" -type f)"

helm upgrade \
  --install \
  --namespace ${ARGOCD_NAMESPACE?} \
  --create-namespace \
  argocd argo/argo-cd \
  --version "${ARGOCD_HELM_CHART_VERSION?}" \
  --values "${ARGOCD_TEMPORARY_DIRECTORY}/values.yaml" \
  --values "${ARGOCD_TEMPORARY_DIRECTORY}/values-ingress.yaml" \
  --values "${ARGOCD_TEMPORARY_DIRECTORY}/values-sso.yaml" \
  --values "${ARGOCD_TEMPORARY_DIRECTORY}/values-custom-health-check.yaml" \
  --values "${ARGOCD_TEMPORARY_DIRECTORY}/values-rbac-config.yaml" \
  --values "${ARGOCD_TEMPORARY_DIRECTORY}/values-configs-known-hosts.yaml" \
  --values "${ARGOCD_TEMPORARY_DIRECTORY}/values-extra-objects.yaml" \
  --values "${ARGOCD_TEMPORARY_DIRECTORY}/values-additional-projects.yaml" \
  --values "${ARGOCD_TEMPORARY_DIRECTORY}/values-additional-applications.yaml"

helm upgrade \
  --install \
  --namespace ${ARGOCD_NAMESPACE?} \
  --create-namespace \
  app-of-apps-infra ${SCRIPTS_DIRECTORY}/../../../infrastructure/bootstrap/app-of-apps
